/*
 ==============================================================================
 
 This file was auto-generated by the Introjucer!
 
 It contains the basic startup code for a Juce application.
 
 ==============================================================================
*/

#include "../Plugin/JuceLibraryCode/AppConfig.h"
 
#include "JuceHeader.h"
#include "StandaloneFilterWindow.h"



class SilverbirdAppApplication  : public JUCEApplication
{
public:
    SilverbirdAppApplication() {}
    
    void initialise (const String& commandLine)
    {
        //ApplicationProperties::setStorageParameters (T("SilverbirdApp"), String::empty, T("SilverbirdApp"), 400, PropertiesFile::storeAsXML);

        pluginWindow = new StandaloneFilterWindow (ProjectInfo::projectName, Colours::black, NULL, false);
        
        int biggestBufferSize = pluginWindow->pluginHolder->deviceManager.getCurrentAudioDevice()->getAvailableBufferSizes().getLast();
        
        audioSetup.sampleRate = 32000;
        audioSetup.bufferSize = biggestBufferSize;
        audioSetup.inputChannels = 0;
        audioSetup.outputChannels = 2;
        
        pluginWindow->pluginHolder->reloadAudioDeviceState(String(), &audioSetup);

        
        pluginWindow->setTitleBarButtonsRequired (DocumentWindow::allButtons, false);
        pluginWindow->setVisible (true);
        //pluginWindow->setUsingNativeTitleBar(true); // comment out to get to the application (options) button ;)
        
        pluginWindow->setResizable (false, false);
        pluginWindow->centreWithSize(pluginWindow->getWidth(), pluginWindow->getHeight());
        
        //pluginWindow->pluginHolder->showAudioSettingsDialog();
        
        #if JUCE_ANDROID
        Desktop::getInstance().setScreenSaverEnabled (false);
        glContext.attachTo (*pluginWindow);
        std::cout << "is Android" << std::endl;
        #endif
    }
    
    void shutdown()
    {
        #if JUCE_ANDROID
        glContext.detach();
        #endif
        pluginWindow = nullptr; // (deletes our window)
    }
    
    void systemRequestedQuit()
    {
        quit();
    }
    
    void anotherInstanceStarted (const String& commandLine)
    {
        // When another instance of the app is launched while this one is running,
        // this method is invoked, and the commandLine parameter tells you what
        // the other instance's command-line arguments were.
    }

    const String getApplicationName()       {
        return ProjectInfo::projectName;
    }
    
    const String getApplicationVersion()    {
        return ProjectInfo::versionString;
    }
    
    bool moreThanOneInstanceAllowed() {
        return true;
    }
    
    AudioDeviceManager::AudioDeviceSetup audioSetup;
 
private:
    ScopedPointer<StandaloneFilterWindow> pluginWindow;
    #if JUCE_ANDROID
    OpenGLContext glContext;
    #endif
};


//==============================================================================
// This macro generates the main() routine that launches the app.
START_JUCE_APPLICATION (SilverbirdAppApplication)
